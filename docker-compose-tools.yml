# version: "3.9"

services:
  # Autoindex - Simple Directory Index
  autoindex:
    container_name: autoindex
    image: dceoy/nginx-autoindex:alpine
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    profiles: ["apps", "all"]
    networks:
      - t2_proxy
    ports:
      - "${AUTOINDEX_PORT:-8080}:80"
    volumes:
      - ${MEDIADIR:-$DATADIR}:/var/lib/nginx/html:ro # Location you want to index
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.autoindex-rtr.entrypoints=https"
      - "traefik.http.routers.autoindex-rtr.rule=Host(`index.$DOMAINNAME_CLOUD_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.autoindex-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.autoindex-rtr.service=autoindex-svc"
      - "traefik.http.services.autoindex-svc.loadbalancer.server.port=80"
      ## Homepage
      - homepage.group=Admin
      - homepage.name=Index
      - homepage.icon=index.png
      - homepage.href=https://index.mirwin.net
      - homepage.description=Downloads directory (read-only)
      - homepage.weight=5

  # jDownloader - Download management
  jdownloader:
    image: jlesage/jdownloader-2:v1.8.0
    container_name: jdownloader
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    profiles: ["apps", "all"]
    networks:
      - t2_proxy
    ports:
      - "${JDOWNLOADER_PORT:-5801}:5800"
    volumes:
      - ${DOWNLOADSDIR:-$DATADIR/downloads}:/data/downloads
      - $DOCKERDIR/appdata/jdownloader:/config
    environment:
      USER_ID: $PUID
      GROUP_ID: $PGID
      TZ: $TZ
      UMASK: 002
      KEEP_APP_RUNNING: 1
      CLEAN_TMP_DIR: 1
      DISPLAY_WIDTH: 1600
      DISPLAY_HEIGHT: 960
      VNC_PASSWORD: $JDOWN_VNC_PASSWD
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5800/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.jdownloader-rtr.entrypoints=https"
      - "traefik.http.routers.jdownloader-rtr.rule=Host(`jdown.$DOMAINNAME_CLOUD_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.jdownloader-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.jdownloader-rtr.service=jdownloader-svc"
      - "traefik.http.services.jdownloader-svc.loadbalancer.server.port=5800"
      # ## Homepage
      - homepage.group=Downloaders
      - homepage.name=JDownloader
      - homepage.icon=jdowloader.png
      - homepage.href=https://jdown.mirwin.net
      - homepage.description=Download files
      - homepage.weight=5

  # Firefox - Web Broswer
  # VNC password not working - check
  firefox:
    image: jlesage/firefox:v1.8.0
    container_name: firefox
    security_opt:
      - seccomp:unconfined # October 15, 2020 https://github.com/jlesage/docker-firefox/blob/master/README.md#allowing-the-membarrier-system-call
    restart: unless-stopped
    profiles: ["apps", "all"]
    networks:
      - t2_proxy
    ports:
      - "${FIREFOX_PORT:-5802}:5800"
    volumes:
      - $DOCKERDIR/appdata/firefox:/config
      - ${DOWNLOADSDIR:-$DATADIR/downloads}:/data/downloads
      - /dev/shm:/dev/shm
    environment:
      USER_ID: $PUID
      GROUP_ID: $PGID
      TZ: $TZ
      UMASK: 002
      KEEP_APP_RUNNING: 1
      CLEAN_TMP_DIR: 1
      DISPLAY_WIDTH: 1920
      DISPLAY_HEIGHT: 1080
      VNC_PASSWD: $FIREFOX_VNC_PASSWD
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5800/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"
    labels:
      - sablier.enable=true
      - sablier.group=mygroup
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.firefox-rtr.entrypoints=https"
      - "traefik.http.routers.firefox-rtr.rule=Host(`firefox.$DOMAINNAME_CLOUD_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.firefox-rtr.middlewares=chain-oauth@file"
      # - "traefik.http.routers.firefox-rtr.middlewares=my-fail2ban@file"
      ## HTTP Services
      - "traefik.http.routers.firefox-rtr.service=firefox-svc"
      - "traefik.http.services.firefox-svc.loadbalancer.server.port=5800"
      ## Homepage
      - homepage.group=Tools
      - homepage.name=Firefox
      - homepage.icon=firefox.png
      - homepage.href=https://firefox.mirwin.net
      - homepage.description=Web Browser
      # - homepage.weight=2

  # qDirStat - Directory Statistics
  qdirstat:
    image: jlesage/qdirstat:latest
    container_name: qdirstat
    # security_opt:
    #   - no-new-privileges:true
    restart: unless-stopped
    profiles: ["apps", "all"]
    networks:
      - t2_proxy
    ports:
      - "5800:5800"
    volumes:
      - /volume1:/storage:ro
      - $DOCKERDIR/appdata/qdirstat/config:/config:rw
    environment:
      USER_ID: $PUID
      GROUP_ID: $PGID
      UMASK: 002
      TZ: $TZ
      KEEP_APP_RUNNING: 1
      CLEAN_TMP_DIR: 1
      DISPLAY_WIDTH: 1600
      DISPLAY_HEIGHT: 960
      VNC_PASSWORD: $QDIRSTAT_VNC_PASSWD
    labels:
      - sablier.enable=true
      - sablier.group=mygroup
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.qdirstat-rtr.entrypoints=https"
      - "traefik.http.routers.qdirstat-rtr.rule=Host(`qdir.$DOMAINNAME_CLOUD_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.qdirstat-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.qdirstat-rtr.service=qdirstat-svc"
      - "traefik.http.services.qdirstat-svc.loadbalancer.server.port=5800"

  # VSCode - VSCode Editing
  vscode:
    image: lscr.io/linuxserver/code-server:4.19.1
    container_name: vscode
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    profiles: ["core", "all"]
    networks:
      - t2_proxy
    ports:
      - "${VSCODE_PORT:-8443}:8443"
    volumes:
      - $DOCKERDIR:/data/docker
      - ${USERDIR:-$HOME}:/data/server
      - $DATADIR:/data/data
      - $DOCKERDIR/appdata/vscode:/config
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
      # DOCKER_HOST: tcp://socket-proxy:2375
      # PASSWORD: $VSCODE_PASSWORD
      # HASHED_PASSWORD: #optional
      # SUDO_PASSWORD: password #optional
      # SUDO_PASSWORD_HASH: #optional
      # PROXY_DOMAIN: code-server.my.domain #optional
      DEFAULT_WORKSPACE: /config/data/User/Workspaces/AZ.code-workspace #optional
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8443/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"
    labels:
      - sablier.enable=true
      - sablier.group=mygroup
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.vscode-rtr.entrypoints=https"
      - "traefik.http.routers.vscode-rtr.rule=Host(`code.$DOMAINNAME_CLOUD_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.vscode-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.vscode-rtr.service=vscode-svc"
      - "traefik.http.services.vscode-svc.loadbalancer.server.port=8443"
      ## Homepage
      - homepage.group=Tools
      - homepage.name=VS Code
      - homepage.icon=vscode.png
      - homepage.href=https://code.mirwin.net
      - homepage.description=VS Code Editor
      # - homepage.weight=2

  # https://github.com/jordan-dalby/ByteStash?ref=selfh.st
  bytestash:
    container_name: bytestash
    image: "ghcr.io/jordan-dalby/bytestash:latest"
    restart: always
    volumes:
      - $DOCKERDIR/appdata/bytestash:/data/snippets
    profiles: ["apps", "all"]
    networks:
      - t2_proxy
    ports:
      - "5180:5000"
    environment:
      # See https://github.com/jordan-dalby/ByteStash/wiki/FAQ#environment-variables
      BASE_PATH: ""
      JWT_SECRET: your-secret
      TOKEN_EXPIRY: 24h
      ALLOW_NEW_ACCOUNTS: "false"
      DEBUG: "true"
      DISABLE_ACCOUNTS: "true"
      DISABLE_INTERNAL_ACCOUNTS: "false"

      # See https://github.com/jordan-dalby/ByteStash/wiki/Single-Sign%E2%80%90on-Setup for more info
      OIDC_ENABLED: "false"
      # OIDC_DISPLAY_NAME: ""
      # OIDC_ISSUER_URL: ""
      # OIDC_CLIENT_ID: ""
      # OIDC_CLIENT_SECRET: ""
      # OIDC_SCOPES: ""
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth
      - "traefik.http.routers.bytestash-rtr.entrypoints=https"
      - "traefik.http.routers.bytestash-rtr.rule=Host(`bytestash.$DOMAINNAME_CLOUD_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.bytestash-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.bytestash-rtr.service=bytestash-svc"
      - "traefik.http.services.bytestash-svc.loadbalancer.server.port=5000"
      ## Homepage
      - homepage.group=Admin
      - homepage.name=bytestash
      - homepage.href=https://bytestash.mirwin.net
      - homepage.description=Stash text snippets
      - homepage.weight=1

  # IT-Tools - Status Page & Monitoring Server
  it-tools:
    image: corentinth/it-tools
    container_name: it-tools
    # security_opt:
    #   - no-new-privileges:true
    restart: unless-stopped
    profiles: ["apps", "all"]
    networks:
      - t2_proxy
    labels:
      - sablier.enable=true
      - sablier.group=mygroup
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.it-tools-rtr.entrypoints=https"
      - "traefik.http.routers.it-tools-rtr.rule=Host(`tools.$DOMAINNAME_CLOUD_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.it-tools-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.it-tools-rtr.service=it-tools-svc"
      - "traefik.http.services.it-tools-svc.loadbalancer.server.port=80"
      ## Homepage
      - homepage.group=Tools
      - homepage.name=IT Tools
      - homepage.icon=tools.png
      - homepage.href=https://tools.mirwin.net
      - homepage.description=Random IT Tools
      - homepage.weight=3

  # https://github.com/clidey/whodb?tab=readme-ov-file#quick-start
  whodb:
    image: clidey/whodb
    volumes: # (optional for sqlite) 
      - $DOCKERDIR/appdata/whodb:/db
    # environment:
      # WHODB_OLLAMA_HOST:YOUR_OLLAMA_HOST
      # WHODB_OLLAMA_PORT:YOUR_OLLAMA_PORT
      # USER_ID: $PUID
      # GROUP_ID: $PGID
      # UMASK: 002
      # TZ: $TZ
    profiles: ["apps", "all"]
    ports:
      - "9134:8080"
    networks:
      - t2_proxy
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth
      - "traefik.http.routers.whodb-rtr.entrypoints=https"
      - "traefik.http.routers.whodb-rtr.rule=Host(`whodb.$DOMAINNAME_CLOUD_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.whodb-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.whodb-rtr.service=whodb-svc"
      - "traefik.http.services.whodb-svc.loadbalancer.server.port=8080"
      ## Homepage
      - homepage.group=Admin
      - homepage.name=whodb
      - homepage.href=https://whodb.mirwin.net
      - homepage.description=DB Exploration tool
      - homepage.weight=1

  # Uptime Kuma - Status Page & Monitoring Server
  uptime-kuma:
    image: louislam/uptime-kuma
    container_name: uptime-kuma
    # security_opt:
    #   - no-new-privileges:true
    restart: unless-stopped
    profiles: ["core", "all"]
    networks:
      - t2_proxy
      - default
    volumes:
      - $DOCKERDIR/appdata/uptime-kuma:/app/data
    labels:
      - sablier.enable=true
      - sablier.group=mygroup
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.uptime-kuma-rtr.entrypoints=https"
      - "traefik.http.routers.uptime-kuma-rtr.rule=Host(`kuma.$DOMAINNAME_CLOUD_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.uptime-kuma-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.uptime-kuma-rtr.service=uptime-kuma-svc"
      - "traefik.http.services.uptime-kuma-svc.loadbalancer.server.port=3001"

  # File Browser - Explorer
  filebrowser:
    image: filebrowser/filebrowser:s6
    container_name: filebrowser
    # security_opt:
    #   - no-new-privileges:true
    restart: unless-stopped
    profiles: ["apps", "all"]
    networks:
      - t2_proxy
    ports:
      - "81:80"
    volumes:
      - $DOCKERDIR/appdata/filebrowser/config:/config
      - $DOCKERDIR/appdata/filebrowser/database:/database
      - $EXTDRIVE:/data
      # - $USERDIR:/data/home
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
    labels:
      - "sablier.enable=true"
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.filebrowser-rtr.entrypoints=https"
      - "traefik.http.routers.filebrowser-rtr.rule=Host(`fb.$DOMAINNAME_CLOUD_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.filebrowser-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.filebrowser-rtr.service=filebrowser-svc"
      - "traefik.http.services.filebrowser-svc.loadbalancer.server.port=80"

  # Dozzle - Real-time Docker Log Viewer
  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    # security_opt:
    #   - no-new-privileges:true
    restart: unless-stopped
    profiles: ["apps", "all"]
    networks:
      - t2_proxy
      - socket_proxy
    ports:
      - "8082:8080"
    environment:
      DOZZLE_LEVEL: info
      DOZZLE_TAILSIZE: 300
      DOZZLE_FILTER: "status=running"
      # DOZZLE_FILTER: "label=log_me" # limits logs displayed to containers with this label
      DOCKER_HOST: tcp://socket-proxy:2375
    # volumes:
    #  - /var/run/docker.sock:/var/run/docker.sock # Use Docker Socket Proxy instead for improved security
    labels:
      - sablier.enable=true
      - sablier.group=mygroup
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.dozzle-rtr.entrypoints=https"
      - "traefik.http.routers.dozzle-rtr.rule=Host(`dozzle.$DOMAINNAME_CLOUD_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.dozzle-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.dozzle-rtr.service=dozzle-svc"
      - "traefik.http.services.dozzle-svc.loadbalancer.server.port=8080"
      ## Homepage
      - homepage.group=Admin
      - homepage.name=Dozzle
      - homepage.icon=dozzle.png
      - homepage.href=https://dozzle.mirwin.net
      - homepage.description=Real-time Docker Log Viewer
      # - homepage.weight=2

  # Autoindex - Simple Directory Index (for Sitespeed.io Results)
  sitespeed:
    container_name: sitespeed
    image: dceoy/nginx-autoindex:latest
    # security_opt:
    #   - no-new-privileges:true
    restart: unless-stopped
    profiles: ["apps", "all"]
    networks:
      - t2_proxy
    volumes:
      - $DOCKERDIR/appdata/sitespeed:/var/lib/nginx/html:ro # Location you want to index
    labels:
      - sablier.enable=true
      - sablier.group=mygroup
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.sitespeed-rtr.entrypoints=https"
      - "traefik.http.routers.sitespeed-rtr.rule=Host(`sitespeed.$DOMAINNAME_CLOUD_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.sitespeed-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.sitespeed-rtr.service=sitespeed-svc"
      - "traefik.http.services.sitespeed-svc.loadbalancer.server.port=80"

  emulatorjs:
    image: lscr.io/linuxserver/emulatorjs:latest
    container_name: emulatorjs
    profiles: ["apps", "all"]
    networks:
      - t2_proxy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      # - SUBFOLDER=/ #optional
    volumes:
      - $DOCKERDIR/appdata/emulatorjs:/config
      - $EXTDRIVE/Dropbox/roms:/data
    ports:
      - 3006:3000
      - 8087:80
      - 4002:4001 #optional
    restart: unless-stopped
    labels:
      - sablier.enable=true
      - sablier.group=mygroup
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.emulatorjs-rtr.entrypoints=https"
      - "traefik.http.routers.emulatorjs-rtr.rule=Host(`emulatorjs.$DOMAINNAME_CLOUD_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.emulatorjs-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.emulatorjs-rtr.service=emulatorjs-svc"
      - "traefik.http.services.emulatorjs-svc.loadbalancer.server.port=80"

  # Glances - System Information
  glances:
    image: nicolargo/glances:latest-full
    container_name: glances
    # security_opt:
    #   - no-new-privileges:true
    restart: unless-stopped
    profiles: ["monitoring", "all"]
    # privileged: true # Only for VM
    # network_mode: host
    networks:
      - t2_proxy
      - socket_proxy
      - default
    ports:
      - "61208:61208"
    pid: host
    volumes:
      - $DOCKERDIR/appdata/glances/glances.conf:/glances/conf/glances.conf # Use this if you want to add a glances.conf file
      - $DATADIR:/data/data:ro
      - $DOCKERDIR:/data/docker:ro
      # - /var/run/docker.sock:/var/run/docker.sock:ro # Use Docker Socket Proxy instead for improved security
    environment:
      # GLANCES_OPT: "-C /glances/conf/glances.conf --quiet --export influxdb"
      # GLANCES_OPT: "--export influxdb"
      GLANCES_OPT: "-w"
      DOCKER_HOST: tcp://socket-proxy:2375
    labels:
      - sablier.enable=true
      - sablier.group=mygroup
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.glances-rtr.entrypoints=https"
      - "traefik.http.routers.glances-rtr.rule=Host(`glances.$DOMAINNAME_CLOUD_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.glances-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.glances-rtr.service=glances-svc"
      - "traefik.http.services.glances-svc.loadbalancer.server.port=61208"

  # Guacamole - Remote desktop, SSH, on Telnet on any HTML5 Browser
  # Create all databases and tables first
  guacamole:
    image: guacamole/guacamole:latest
    container_name: guacamole
    # security_opt:
    #   - no-new-privileges:true
    restart: unless-stopped
    profiles: ["apps", "all"]
    networks:
      - t2_proxy
      - default
    ports:
      # - "4822:4822"
      - "8083:8080"
    environment:
      GUACD_HOSTNAME: guacd
      MYSQL_HOSTNAME: $DB_HOST
      MYSQL_PORT: 3306
      MYSQL_DATABASE_FILE: /run/secrets/guac_db_name
      MYSQL_USER_FILE: /run/secrets/guac_mysql_user
      MYSQL_PASSWORD_FILE: /run/secrets/guac_mysql_password
    secrets:
      - guac_db_name
      - guac_mysql_user
      - guac_mysql_password
    labels:
      - sablier.enable=true
      - sablier.group=mygroup
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.guacamole-rtr.entrypoints=https"
      - "traefik.http.routers.guacamole-rtr.rule=Host(`guac.$DOMAINNAME_CLOUD_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.guacamole-rtr.middlewares=chain-oauth@file,add-guacamole"
      - "traefik.http.middlewares.add-guacamole.addPrefix.prefix=/guacamole"
      ## HTTP Services
      - "traefik.http.routers.guacamole-rtr.service=guacamole-svc"
      - "traefik.http.services.guacamole-svc.loadbalancer.server.port=8080"

  # Guacamole Daemon - Needed for Guacamole
  guacd:
    image: guacamole/guacd
    container_name: guacd
    # security_opt:
    #   - no-new-privileges:true
    restart: unless-stopped
    profiles: ["apps", "all"]

  # WhoAmI - For Testing and Troubleshooting
  whoami:
    image: traefik/whoami
    container_name: whoami
    # security_opt:
    #   - no-new-privileges:true
    restart: unless-stopped
    profiles: ["apps", "all"]
    networks:
      - t2_proxy
    labels:
      - sablier.enable=true
      - sablier.group=mygroup
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.whoami-rtr.entrypoints=https"
      - "traefik.http.routers.whoami-rtr.rule=Host(`whoami.$DOMAINNAME_CLOUD_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.whoami-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.whoami-rtr.service=whoami-svc"
      - "traefik.http.services.whoami-svc.loadbalancer.server.port=80"
      ## Homepage
      # - homepage.group=Tools
      # - homepage.name=Who Am I
      # - homepage.icon=whoami.png
      # - homepage.href=https://whoami.mirwin.net
      # - homepage.description=Whoami host information
      # - homepage.weight=4

  # AI/ML bot
  serge:
    image: ghcr.io/serge-chat/serge:latest
    container_name: serge
    restart: unless-stopped
    ports:
      - 8009:8008
    profiles: ["apps", "tool", "all"]
    networks:
      - t2_proxy
    volumes:
      - $DOCKERDIR/appdata/serge:/serge/db
      - $EXTDRIVE/weights:/usr/src/app/weights
    # environment:
      # TZ: $TZ
      # PUID: $PUID
      # PGID: $PGID
    labels:
      - sablier.enable=true
      - sablier.group=mygroup
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.serge-rtr.entrypoints=https"
      - "traefik.http.routers.serge-rtr.rule=Host(`serge.$DOMAINNAME_CLOUD_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.serge-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.serge-rtr.service=serge-svc"
      - "traefik.http.services.serge-svc.loadbalancer.server.port=8008"

  # Scrutiny - Hard Drive S.M.A.R.T Monitoring
  scrutiny:
    container_name: scrutiny
    image: ghcr.io/analogj/scrutiny:master-omnibus
    cap_add:
      - SYS_RAWIO
    profiles: ["apps", "admin", "all"]
    networks:
      - t2_proxy
    ports:
      - "9004:8080" # webapp
      # - "8086:8086" # influxDB admin
    volumes:
      - /run/udev:/run/udev:ro
      - $DOCKERDIR/appdata/scrutiny:/opt/scrutiny/config
      - $DOCKERDIR/appdata/influxdb2:/opt/scrutiny/influxdb
    devices:
      - "/dev/sda"
      - "/dev/nvme0"
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.scrutiny-rtr.entrypoints=https"
      - "traefik.http.routers.scrutiny-rtr.rule=Host(`scrutiny.$DOMAINNAME_CLOUD_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.scrutiny-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.scrutiny-rtr.service=scrutiny-svc"
      - "traefik.http.services.scrutiny-svc.loadbalancer.server.port=8080"
      ## Homepage
      - homepage.group=Admin
      - homepage.name=Scrutiny
      - homepage.icon=scrutiny.png
      - homepage.href=https://scrutiny.mirwin.net
      - homepage.description=Hard Drive S.M.A.R.T Monitoring
      - homepage.weight=5
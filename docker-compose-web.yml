networks:
  t2_proxy:
    external: true

services:
  flaresolverr:
    container_name: flaresolverr
    environment:
    - LOG_LEVEL=${LOG_LEVEL:-info}
    - LOG_HTML=${LOG_HTML:-false}
    - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
    - TZ=${TZ:-UTC}
    image: ghcr.io/flaresolverr/flaresolverr:latest
    labels:
    - traefik.enable=true
    - traefik.http.routers.flaresolverr-rtr.entrypoints=https
    - traefik.http.routers.flaresolverr-rtr.rule=Host(`flaresolverr.${DOMAINNAME_CLOUD_SERVER}`)
    - traefik.http.routers.flaresolverr-rtr.tls=true
    - traefik.http.routers.flaresolverr-rtr.service=flaresolverr-svc
    - traefik.http.services.flaresolverr-svc.loadbalancer.server.port=8191
    networks:
      t2_proxy:
        ipv4_address: 192.168.90.160
    profiles:
    - tools
    - all
    restart: unless-stopped

  nginx-proxy-manager:
    container_name: nginx-proxy-manager
    environment:
      TZ: ${TZ:-UTC}
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 40s
      test:
      - CMD
      - wget
      - --no-verbose
      - --tries=1
      - --spider
      - http://localhost:81/
      timeout: 10s
    image: jc21/nginx-proxy-manager:latest
    labels:
    - sablier.enable=true
    - sablier.group=mygroup
    - traefik.enable=true
    - traefik.http.routers.nginx-proxy-manager-rtr.entrypoints=https
    - traefik.http.routers.nginx-proxy-manager-rtr.rule=Host(`npm.${DOMAINNAME_CLOUD_SERVER}`)
    - traefik.http.routers.nginx-proxy-manager-rtr.middlewares=chain-oauth@file
    - traefik.http.routers.nginx-proxy-manager-rtr.service=nginx-proxy-manager-svc
    - traefik.http.services.nginx-proxy-manager-svc.loadbalancer.server.port=81
    - homepage.group=Admin
    - homepage.name=Nginx Proxy Manager
    - homepage.icon=nginx-proxy-manager.png
    - homepage.href=https://npm.${DOMAINNAME_CLOUD_SERVER}
    - homepage.description=Alternative reverse proxy
    - homepage.weight=2
    logging:
      driver: json-file
      options:
        max-file: "3"
        max-size: 10m
        tag: '{{.Name}}'
    networks:
    - t2_proxy
    ports:
    - 80:80
    - 81:81
    - 443:443
    profiles:
    - web
    - all
    restart: unless-stopped
    volumes:
    - ${DOCKERDIR:-/opt/docker}/appdata/nginx-proxy-manager:/data
    - ${DOCKERDIR:-/opt/docker}/appdata/nginx-proxy-manager/letsencrypt:/etc/letsencrypt

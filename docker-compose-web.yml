networks:
  t2_proxy:
    external: true
services:
  # firefox:
  #   container_name: firefox
  #   environment:
  #     PGID: ${PGID:-1000}
  #     PUID: ${PUID:-1000}
  #     TZ: ${TZ:-UTC}
  #   # healthcheck:
  #   #   interval: 30s
  #   #   retries: 3
  #   #   start_period: 40s
  #   #   test:
  #   #   - CMD
  #   #   - wget
  #   #   - --no-verbose
  #   #   - --tries=1
  #   #   - --spider
  #   #   - http://localhost:3000/
  #   #   timeout: 10s
  #   image: lscr.io/linuxserver/firefox:latest
  #   labels:
  #   - sablier.enable=true
  #   - sablier.group=mygroup
  #   - traefik.enable=true
  #   - traefik.http.routers.firefox-rtr.entrypoints=https
  #   - traefik.http.routers.firefox-rtr.rule=Host(`firefox.${DOMAINNAME_CLOUD_SERVER}`)
  #   - traefik.http.routers.firefox-rtr.middlewares=chain-oauth@file
  #   - traefik.http.routers.firefox-rtr.service=firefox-svc
  #   - traefik.http.services.firefox-svc.loadbalancer.server.port=3000
  #   - homepage.group=Web
  #   - homepage.name=Firefox
  #   - homepage.icon=firefox.png
  #   - homepage.href=https://firefox.${DOMAINNAME_CLOUD_SERVER}
  #   - homepage.description=Web browser
  #   - homepage.weight=1
  #   logging:
  #     driver: json-file
  #     options:
  #       max-file: "3"
  #       max-size: 10m
  #       tag: '{{.Name}}'
  #   networks:
  #   - t2_proxy
  #   ports:
  #   - ${FIREFOX_PORT:-3000}:3000
  #   profiles:
  #   - web
  #   - all
  #   restart: unless-stopped
  #   volumes:
  #   - ${DOCKERDIR:-/opt/docker}/appdata/firefox:/config
  flaresolverr:
    container_name: flaresolverr
    environment:
    - LOG_LEVEL=${LOG_LEVEL:-info}
    - LOG_HTML=${LOG_HTML:-false}
    - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
    - TZ=${TZ:-UTC}
    image: ghcr.io/flaresolverr/flaresolverr:latest
    labels:
    - traefik.enable=true
    - traefik.http.routers.flaresolverr-rtr.entrypoints=https
    - traefik.http.routers.flaresolverr-rtr.rule=Host(`flaresolverr.${DOMAINNAME_CLOUD_SERVER}`)
    - traefik.http.routers.flaresolverr-rtr.tls=true
    - traefik.http.routers.flaresolverr-rtr.service=flaresolverr-svc
    - traefik.http.services.flaresolverr-svc.loadbalancer.server.port=8191
    networks:
      t2_proxy:
        ipv4_address: 192.168.90.160
    profiles:
    - tools
    - all
    restart: unless-stopped
  lounge:
    container_name: lounge
    image: ghcr.io/thelounge/thelounge:latest
    labels:
    - traefik.enable=true
    - traefik.http.routers.lounge-rtr.entrypoints=https
    - traefik.http.routers.lounge-rtr.rule=Host(`lounge.${DOMAINNAME_CLOUD_SERVER}`)
    - traefik.http.routers.lounge-rtr.middlewares=chain-oauth@file
    - traefik.http.routers.lounge-rtr.service=lounge-svc
    - traefik.http.services.lounge-svc.loadbalancer.server.port=9000
    networks:
    - t2_proxy
    ports:
    - 9003:9000
    profiles:
    - tools
    - all
    restart: always
    volumes:
    - ${DOCKERDIR:-/opt/docker}/appdata/lounge:/var/opt/thelounge
  nginx-proxy-manager:
    container_name: nginx-proxy-manager
    environment:
      TZ: ${TZ:-UTC}
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 40s
      test:
      - CMD
      - wget
      - --no-verbose
      - --tries=1
      - --spider
      - http://localhost:81/
      timeout: 10s
    image: jc21/nginx-proxy-manager:latest
    labels:
    - sablier.enable=true
    - sablier.group=mygroup
    - traefik.enable=true
    - traefik.http.routers.nginx-proxy-manager-rtr.entrypoints=https
    - traefik.http.routers.nginx-proxy-manager-rtr.rule=Host(`npm.${DOMAINNAME_CLOUD_SERVER}`)
    - traefik.http.routers.nginx-proxy-manager-rtr.middlewares=chain-oauth@file
    - traefik.http.routers.nginx-proxy-manager-rtr.service=nginx-proxy-manager-svc
    - traefik.http.services.nginx-proxy-manager-svc.loadbalancer.server.port=81
    - homepage.group=Admin
    - homepage.name=Nginx Proxy Manager
    - homepage.icon=nginx-proxy-manager.png
    - homepage.href=https://npm.${DOMAINNAME_CLOUD_SERVER}
    - homepage.description=Alternative reverse proxy
    - homepage.weight=2
    logging:
      driver: json-file
      options:
        max-file: "3"
        max-size: 10m
        tag: '{{.Name}}'
    networks:
    - t2_proxy
    ports:
    - 80:80
    - 81:81
    - 443:443
    profiles:
    - web
    - all
    restart: unless-stopped
    volumes:
    - ${DOCKERDIR:-/opt/docker}/appdata/nginx-proxy-manager:/data
    - ${DOCKERDIR:-/opt/docker}/appdata/nginx-proxy-manager/letsencrypt:/etc/letsencrypt
  vaultwarden:
    container_name: vaultwarden
    environment:
    - DOMAIN=https://vaultwarden.${DOMAINNAME_CLOUD_SERVER}
    - LOGIN_RATELIMIT_MAX_BURST=10
    - LOGIN_RATELIMIT_SECONDS=60
    - ADMIN_RATELIMIT_MAX_BURST=10
    - ADMIN_RATELIMIT_SECONDS=60
    - ADMIN_TOKEN=$VAULTWARDEN_TOKEN
    - SENDS_ALLOWED=true
    - EMERGENCY_ACCESS_ALLOWED=true
    - WEB_VAULT_ENABLED=true
    image: vaultwarden/server:latest
    labels:
    - sablier.enable=true
    - traefik.enable=true
    - traefik.http.routers.vaultwarden-rtr.entrypoints=https
    - traefik.http.routers.vaultwarden-rtr.rule=Host(`vaultwarden.${DOMAINNAME_CLOUD_SERVER}`)
    - traefik.http.routers.vaultwarden-rtr.middlewares=chain-oauth@file
    - traefik.http.routers.vaultwarden-rtr.service=vaultwarden-svc
    - traefik.http.services.vaultwarden-svc.loadbalancer.server.port=80
    networks:
    - t2_proxy
    ports:
    - 9991:80
    profiles:
    - tools
    - all
    restart: unless-stopped
    volumes:
    - ${DOCKERDIR:-/opt/docker}/appdata/vaultwarden:/data
  vscode:
    container_name: vscode
    environment:
      PASSWORD: $VSCODE_PASSWORD
      PGID: ${PGID:-1000}
      PUID: ${PUID:-1000}
      TZ: ${TZ:-UTC}
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 40s
      test:
      - CMD
      - wget
      - --no-verbose
      - --tries=1
      - --spider
      - http://localhost:8443/
      timeout: 10s
    image: lscr.io/linuxserver/code-server:latest
    labels:
    - sablier.enable=true
    - sablier.group=mygroup
    - traefik.enable=true
    - traefik.http.routers.vscode-rtr.entrypoints=https
    - traefik.http.routers.vscode-rtr.rule=Host(`vscode.${DOMAINNAME_CLOUD_SERVER}`)
    - traefik.http.routers.vscode-rtr.middlewares=chain-oauth@file
    - traefik.http.routers.vscode-rtr.service=vscode-svc
    - traefik.http.services.vscode-svc.loadbalancer.server.port=8443
    - homepage.group=Web
    - homepage.name=VSCode
    - homepage.icon=vscode.png
    - homepage.href=https://vscode.${DOMAINNAME_CLOUD_SERVER}
    - homepage.description=Code editor
    - homepage.weight=2
    logging:
      driver: json-file
      options:
        max-file: "3"
        max-size: 10m
        tag: '{{.Name}}'
    networks:
    - t2_proxy
    ports:
    - ${VSCODE_PORT:-8443}:8443
    profiles:
    - web
    - all
    restart: unless-stopped
    volumes:
    - ${DOCKERDIR:-/opt/docker}/appdata/vscode:/config
    - ${DATADIR:-/data}:/data
  whoogle:
    container_name: whoogle
    environment:
    - WHOOGLE_ALT_TW=farside.link/nitter
    - WHOOGLE_ALT_YT=farside.link/invidious
    - WHOOGLE_ALT_IG=farside.link/bibliogram/u
    - WHOOGLE_ALT_RD=farside.link/libreddit
    - WHOOGLE_ALT_MD=farside.link/scribe
    - WHOOGLE_ALT_TL=farside.link/lingva
    - WHOOGLE_ALT_IMG=farside.link/rimgo
    - WHOOGLE_ALT_WIKI=farside.link/wikiless
    - WHOOGLE_ALT_IMDB=farside.link/libremdb
    - WHOOGLE_ALT_QUORA=farside.link/quetre
    - WHOOGLE_CONFIG_DISABLE=1
    - WHOOGLE_CONFIG_SEARCH_LANGUAGE=lang_en
    - WHOOGLE_CONFIG_GET_ONLY=1
    - WHOOGLE_CONFIG_COUNTRY=US
    - WHOOGLE_CONFIG_PREFERENCES_ENCRYPTED=1
    image: ${WHOOGLE_IMAGE:-benbusby/whoogle-search}
    labels:
    - sablier.enable=true
    - sablier.group=mygroup
    - traefik.enable=true
    - traefik.http.routers.whoogle-rtr.entrypoints=https
    - traefik.http.routers.whoogle-rtr.rule=Host(`whoogle.${DOMAINNAME_CLOUD_SERVER}`)
    - traefik.http.routers.whoogle-rtr.middlewares=chain-oauth@file
    - traefik.http.routers.whoogle-rtr.service=whoogle-svc
    - traefik.http.services.whoogle-svc.loadbalancer.server.port=5000
    - homepage.group=Tools
    - homepage.name=Whoogle
    - homepage.icon=whoogle.png
    - homepage.href=https://whoogle.${DOMAINNAME_CLOUD_SERVER}
    - homepage.description=Google proxy
    mem_limit: 256mb
    memswap_limit: 256mb
    networks:
    - t2_proxy
    pids_limit: 50
    ports:
    - 8202:5000
    profiles:
    - tools
    - all
    restart: unless-stopped
    tmpfs:
    - /config/:size=10M,uid=927,gid=927,mode=1700
    user: whoogle

name: Lint and Format

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  yaml-lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install yamllint
      run: |
        python -m pip install --upgrade pip
        pip install yamllint
        
    - name: Run yamllint
      run: |
        echo "Linting YAML files..."
        yamllint -c .yamllint -f github *.yml docker-compose-services/*.yml
        
    - name: Check YAML syntax
      run: |
        echo "Checking YAML syntax..."
        find . -type f \( -name "*.yml" -o -name "*.yaml" \) \
          ! -path "./appdata/*" \
          ! -path "./data/*" \
          ! -path "./secrets/*" \
          ! -path "./.git/*" | while read file; do
          
          python -c "import yaml; yaml.safe_load(open('$file', 'r'))" 2>/dev/null
          if [ $? -eq 0 ]; then
            echo "✅ $file syntax is valid"
          else
            echo "❌ $file has syntax errors"
            exit 1
          fi
        done
        
    - name: Check for trailing whitespace
      run: |
        echo "Checking for trailing whitespace..."
        if grep -r " $" . --include="*.yml" --include="*.yaml" | grep -v ".git"; then
          echo "❌ Found trailing whitespace in YAML files"
          grep -r " $" . --include="*.yml" --include="*.yaml" | grep -v ".git"
          exit 1
        fi
        
    - name: Check for consistent indentation
      run: |
        echo "Checking for consistent indentation..."
        find . -name "*.yml" -o -name "*.yaml" | while read file; do
          if [[ "$file" != *".git"* ]]; then
            # Check for mixed tabs and spaces
            if grep -q $'\t' "$file"; then
              echo "❌ $file contains tabs. Use spaces for indentation."
              exit 1
            fi
          fi
        done 

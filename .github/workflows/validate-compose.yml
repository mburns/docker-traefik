name: Validate Docker Compose Files

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  validate-compose:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Docker
      uses: docker/setup-buildx-action@v3
      
    - name: Validate Docker Compose files
      run: |
        # Find all docker-compose files
        find . -type f \( -name "docker-compose*.yml" -o -name "docker-compose*.yaml" \) \
          ! -path "./appdata/*" \
          ! -path "./data/*" \
          ! -path "./secrets/*" \
          ! -path "./.git/*" | while read file; do
          echo "Validating $file..."
          docker compose -f "$file" config > /dev/null
          if [ $? -eq 0 ]; then
            echo "✅ $file is valid"
          else
            echo "❌ $file has errors"
            exit 1
          fi
        done

    - name: Check for latest tags
      run: |
        echo "Checking for 'latest' image tags..."
        if grep -r ":latest" . --include="*.yml" --include="*.yaml" | grep -v ".git" | grep -v "./appdata" | grep -v "./data" | grep -v "./secrets"; then
          echo "⚠️  Found 'latest' tags. Consider pinning to specific versions for stability."
          echo "Found in:"
          grep -r ":latest" . --include="*.yml" --include="*.yaml" | grep -v ".git" | grep -v "./appdata" | grep -v "./data" | grep -v "./secrets"
        fi
        
    - name: Validate secrets structure
      run: |
        echo "Checking secrets configuration..."
        if [ -d "secrets_example" ]; then
          echo "✅ Secrets example directory exists"
          ls -la secrets_example/
        else
          echo "❌ No secrets example directory found"
        fi

# Security Services
# Security, authentication, and access control applications

# version: "3.9"

networks:
  t2_proxy:
    external: true

services:
  # Authelia - Single Sign-On
  authelia:
    image: authelia/authelia:latest
    container_name: authelia
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    profiles: ["apps", "security", "all"]
    networks:
      - t2_proxy
    ports:
      - "${AUTHELIA_PORT:-9091}:9091"
    volumes:
      - ${DOCKERDIR:-/opt/docker}/appdata/authelia:/config
    environment:
      TZ: ${TZ:-UTC}
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9091/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    labels:
      - sablier.enable=true
      - sablier.group=mygroup
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.authelia-rtr.entrypoints=https"
      - "traefik.http.routers.authelia-rtr.rule=Host(`authelia.${DOMAINNAME_CLOUD_SERVER}`)"
      ## Middlewares
      - "traefik.http.routers.authelia-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.authelia-rtr.service=authelia-svc"
      - "traefik.http.services.authelia-svc.loadbalancer.server.port=9091"
      ## Homepage
      - homepage.group=Security
      - homepage.name=Authelia
      - homepage.icon=authelia.png
      - homepage.href=https://authelia.${DOMAINNAME_CLOUD_SERVER}
      - homepage.description=Single Sign-On
      - homepage.weight=1
      - sablier.enable=true
      - sablier.group=security

  # CrowdSec - Intrusion Detection
  crowdsec:
    image: crowdsecurity/crowdsec:latest
    container_name: crowdsec
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    profiles: ["apps", "security", "all"]
    networks:
      - t2_proxy
    ports:
      - "${CROWDSEC_PORT:-8080}:8080"
    volumes:
      - ${DOCKERDIR:-/opt/docker}/appdata/crowdsec:/etc/crowdsec
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    environment:
      TZ: ${TZ:-UTC}
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    labels:
      - sablier.enable=true
      - sablier.group=mygroup
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.crowdsec-rtr.entrypoints=https"
      - "traefik.http.routers.crowdsec-rtr.rule=Host(`crowdsec.${DOMAINNAME_CLOUD_SERVER}`)"
      ## Middlewares
      - "traefik.http.routers.crowdsec-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.crowdsec-rtr.service=crowdsec-svc"
      - "traefik.http.services.crowdsec-svc.loadbalancer.server.port=8080"
      ## Homepage
      - homepage.group=Security
      - homepage.name=CrowdSec
      - homepage.icon=crowdsec.png
      - homepage.href=https://crowdsec.${DOMAINNAME_CLOUD_SERVER}
      - homepage.description=Intrusion detection
      - homepage.weight=2
      - sablier.enable=true
      - sablier.group=security

  # Fail2Ban - Intrusion Prevention
  fail2ban:
    image: crazymax/fail2ban:latest
    container_name: fail2ban
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    profiles: ["apps", "security", "all"]
    networks:
      - t2_proxy
    ports:
      - "${FAIL2BAN_PORT:-8080}:8080"
    volumes:
      - ${DOCKERDIR:-/opt/docker}/appdata/fail2ban:/data
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    environment:
      TZ: ${TZ:-UTC}
    healthcheck:
      test: ["CMD", "fail2ban-client", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    labels:
      - sablier.enable=true
      - sablier.group=mygroup
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.fail2ban-rtr.entrypoints=https"
      - "traefik.http.routers.fail2ban-rtr.rule=Host(`fail2ban.${DOMAINNAME_CLOUD_SERVER}`)"
      ## Middlewares
      - "traefik.http.routers.fail2ban-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.fail2ban-rtr.service=fail2ban-svc"
      - "traefik.http.services.fail2ban-svc.loadbalancer.server.port=8080"
      ## Homepage
      - homepage.group=Security
      - homepage.name=Fail2Ban
      - homepage.icon=fail2ban.png
      - homepage.href=https://fail2ban.${DOMAINNAME_CLOUD_SERVER}
      - homepage.description=Intrusion prevention
      - homepage.weight=3
      - sablier.enable=true
      - sablier.group=security

  # Vault - Secrets Management
  vault:
    image: vault:latest
    container_name: vault
    restart: unless-stopped
    profiles: ["security", "all"]
    networks:
      - t2_proxy
    ports:
      - "${VAULT_PORT:-8200}:8200"
    volumes:
      - ${DOCKERDIR:-/opt/docker}/appdata/vault:/vault/file
    environment:
      TZ: ${TZ:-UTC}
      VAULT_DEV_ROOT_TOKEN_ID: $VAULT_ROOT_TOKEN
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    command: server -dev
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"
    labels:
      - sablier.enable=true
      - sablier.group=mygroup
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.vault-rtr.entrypoints=https"
      - "traefik.http.routers.vault-rtr.rule=Host(`vault.${DOMAINNAME_CLOUD_SERVER}`)"
      ## Middlewares
      - "traefik.http.routers.vault-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.vault-rtr.service=vault-svc"
      - "traefik.http.services.vault-svc.loadbalancer.server.port=8200"
      ## Homepage
      - homepage.group=Security
      - homepage.name=Vault
      - homepage.icon=vault.png
      - homepage.href=https://vault.${DOMAINNAME_CLOUD_SERVER}
      - homepage.description=Secrets management
      - homepage.weight=4

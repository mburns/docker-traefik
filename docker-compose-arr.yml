services:
  bazarr:
    container_name: bazarr
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
    environment:
      PGID: ${PGID:-1000}
      PUID: ${PUID:-1000}
      TZ: ${TZ:-UTC}
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 40s
      test:
      - CMD
      - wget
      - --no-verbose
      - --tries=1
      - --spider
      - http://localhost:6767/
      timeout: 10s
    image: lscr.io/linuxserver/bazarr
    labels:
    - traefik.enable=true
    - traefik.http.routers.bazarr-rtr.entrypoints=https
    - traefik.http.routers.bazarr-rtr.rule=Host(`bazarr.${DOMAINNAME_CLOUD_SERVER}`)
    - traefik.http.routers.bazarr-rtr.middlewares=chain-oauth@file
    - traefik.http.routers.bazarr-rtr.service=bazarr-svc
    - traefik.http.services.bazarr-svc.loadbalancer.server.port=6767
    - homepage.group=Meta
    - homepage.name=Bazarr
    - homepage.icon=bazarr.png
    - homepage.href=https://bazarr.${DOMAINNAME_CLOUD_SERVER}
    - homepage.description=Subtitle management
    - homepage.weight=5
    - homepage.widget.type=bazarr
    - homepage.widget.url=http://bazarr:6767
    - homepage.widget.key=${BAZARR_API_KEY}
    logging:
      driver: json-file
      options:
        max-file: "3"
        max-size: 10m
        tag: '{{.Name}}'
    networks:
    - t2_proxy
    ports:
    - 6767:6767
    profiles:
    - arrs
    - all
    restart: "no"
    security_opt:
    - no-new-privileges:true
    volumes:
    - ${DOCKERDIR:-/opt/docker}/appdata/bazarr:/config
    - ${DATADIR:-/data}:/data
  jackett:
    container_name: jackett
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
    environment:
    - TZ=${TZ:-UTC}
    - PUID=${PUID:-1000}
    - PGID=${PGID:-1000}
    - AUTO_UPDATE=true
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 40s
      test:
      - CMD
      - wget
      - --no-verbose
      - --tries=1
      - --spider
      - http://localhost:9117/
      timeout: 10s
    image: lscr.io/linuxserver/jackett:latest
    labels:
    - traefik.enable=true
    - traefik.http.routers.jackett-rtr.entrypoints=https
    - traefik.http.routers.jackett-rtr.rule=Host(`jackett.${DOMAINNAME_CLOUD_SERVER}`)
    - traefik.http.routers.jackett-rtr.middlewares=chain-oauth@file
    - traefik.http.routers.jackett-rtr.service=jackett-svc
    - traefik.http.services.jackett-svc.loadbalancer.server.port=9117
    - homepage.group=Meta
    - homepage.name=Jackett
    - homepage.icon=jackett.png
    - homepage.href=https://jackett.${DOMAINNAME_CLOUD_SERVER}
    - homepage.description=Indexer management
    - homepage.weight=3
    - homepage.widget.type=jackett
    - homepage.widget.url=http://jackett:9117
    logging:
      driver: json-file
      options:
        max-file: "3"
        max-size: 10m
        tag: '{{.Name}}'
    networks:
    - t2_proxy
    ports:
    - 9117:9117
    profiles:
    - apps
    - arrs
    - all
    restart: unless-stopped
    security_opt:
    - no-new-privileges:true
    volumes:
    - ${DOCKERDIR:-/opt/docker}/appdata/jackett:/config
    - /tmp/jackett:/downloads
    - /etc/localtime:/etc/localtime:ro
  kapowarr:
    container_name: kapowarr
    environment:
      PGID: ${PGID:-1000}
      PUID: ${PUID:-1000}
      TZ: ${TZ:-UTC}
    image: mrcas/kapowarr:latest
    labels:
    - traefik.enable=true
    - traefik.http.routers.kapowarr-rtr-bypass.entrypoints=https
    - traefik.http.routers.kapowarr-rtr-bypass.priority=100
    - traefik.http.routers.kapowarr-rtr.entrypoints=https
    - traefik.http.routers.kapowarr-rtr.rule=Host(`kapowarr.${DOMAINNAME_CLOUD_SERVER}`)
    - traefik.http.routers.kapowarr-rtr.priority=99
    - traefik.http.routers.kapowarr-rtr-bypass.middlewares=chain-no-auth@file
    - traefik.http.routers.kapowarr-rtr.middlewares=chain-oauth@file
    - traefik.http.routers.kapowarr-rtr.service=kapowarr-svc
    - traefik.http.routers.kapowarr-rtr-bypass.service=kapowarr-svc
    - traefik.http.services.kapowarr-svc.loadbalancer.server.port=5656
    - homepage.group=Request
    - homepage.name=Kapowarr
    - homepage.icon=kapowarr.png
    - homepage.href=https://kapowarr.${DOMAINNAME_CLOUD_SERVER}
    - homepage.description=Comics management
    - homepage.weight=6
    networks:
    - t2_proxy
    ports:
    - 5656:5656
    profiles:
    - media
    - arrs
    - all
    restart: "no"
    volumes:
    - ${DOCKERDIR:-/opt/docker}/appdata/kapowarr:/app/db
    - ${DATADIR:-/data}:/data
    - ${DOWNLOADSDIR:-/downloads}:/config/Downloads
    - /etc/localtime:/etc/localtime:ro
  lidarr:
    container_name: lidarr
    environment:
      PGID: ${PGID:-1000}
      PUID: ${PUID:-1000}
      TZ: ${TZ:-UTC}
    image: lscr.io/linuxserver/lidarr:latest
    labels:
    - traefik.enable=true
    - traefik.http.routers.lidarr-rtr-bypass.entrypoints=https
    - traefik.http.routers.lidarr-rtr-bypass.rule=Host(`lidarr.${DOMAINNAME_CLOUD_SERVER}`)
      && Headers(`traefik-auth-bypass-key`, `$TRAEFIK_AUTH_BYPASS_KEY`)
    - traefik.http.routers.lidarr-rtr-bypass.priority=100
    - traefik.http.routers.lidarr-rtr.entrypoints=https
    - traefik.http.routers.lidarr-rtr.rule=Host(`lidarr.${DOMAINNAME_CLOUD_SERVER}`)
    - traefik.http.routers.lidarr-rtr.priority=99
    - traefik.http.routers.lidarr-rtr-bypass.middlewares=chain-no-auth@file
    - traefik.http.routers.lidarr-rtr.middlewares=chain-oauth@file
    - traefik.http.routers.lidarr-rtr.service=lidarr-svc
    - traefik.http.routers.lidarr-rtr-bypass.service=lidarr-svc
    - traefik.http.services.lidarr-svc.loadbalancer.server.port=8686
    - homepage.group=Request
    - homepage.name=Lidarr
    - homepage.icon=lidarr.png
    - homepage.href=https://lidarr.${DOMAINNAME_CLOUD_SERVER}
    - homepage.description=Music management
    - homepage.weight=3
    - homepage.widget.type=lidarr
    - homepage.widget.url=http://lidarr:8686
    - homepage.widget.key=${LIDARR_API_KEY}
    networks:
    - t2_proxy
    ports:
    - 8686:8686
    profiles:
    - media
    - arrs
    - all
    restart: "no"
    volumes:
    - ${DOCKERDIR:-/opt/docker}/appdata/lidarr:/config
    - ${DATADIR:-/data}:/data
    - ${DOWNLOADSDIR:-/downloads}:/downloads
    - /etc/localtime:/etc/localtime:ro
  lidatube:
    container_name: lidatube
    environment:
      PGID: ${PGID:-1000}
      PUID: ${PUID:-1000}
      TZ: ${TZ:-UTC}
      UMASK: 2
      lidarr_address: http://lidarr:8686
      lidarr_api_key: $LIDARR_API_KEY
    image: thewicklowwolf/lidatube:latest
    labels:
    - traefik.enable=true
    - traefik.http.routers.lidatube-rtr.entrypoints=https
    - traefik.http.routers.lidatube-rtr.rule=Host(`lidatube.${DOMAINNAME_CLOUD_SERVER}`)
    - traefik.http.routers.lidatube-rtr.middlewares=chain-oauth@file
    - traefik.http.routers.lidatube-rtr.service=lidatube-svc
    - traefik.http.services.lidatube-svc.loadbalancer.server.port=5000
    - homepage.group=Downloaders
    - homepage.name=Lidatube
    - homepage.href=https://lidatube.${DOMAINNAME_CLOUD_SERVER}
    - homepage.description=Find missing Lidar images via Youtube
    - homepage.weight=1
    networks:
    - t2_proxy
    ports:
    - 5190:5000
    profiles:
    - arrs
    - all
    volumes:
    - ${DOCKERDIR:-/opt/docker}/appdata/lidatube/database:/lidatube/config
    - ${DOWNLOADSDIR:-/downloads}:/lidatube/downloads
    - ${DATADIR:-/data}:/data
    - /etc/localtime:/etc/localtime:ro
  maintainerr:
    container_name: maintainerr
    environment:
      PGID: ${PGID:-1000}
      PUID: ${PUID:-1000}
      TZ: ${TZ:-UTC}
      UMASK: 2
    image: jorenn92/maintainerr:latest
    labels:
    - traefik.enable=true
    - traefik.http.routers.maintainerr-rtr.entrypoints=https
    - traefik.http.routers.maintainerr-rtr.rule=Host(`maintainerr.${DOMAINNAME_CLOUD_SERVER}`)
    - traefik.http.routers.maintainerr-rtr.middlewares=chain-oauth@file
    - traefik.http.routers.maintainerr-rtr.service=maintainerr-svc
    - traefik.http.services.maintainerr-svc.loadbalancer.server.port=80
    - homepage.group=Meta
    - homepage.name=Maintainerr
    - homepage.icon=maintainerr.png
    - homepage.href=https://maintainerr.${DOMAINNAME_CLOUD_SERVER}
    - homepage.description=Smells like Overseerr, does the opposite
    - homepage.weight=4
    networks:
    - t2_proxy
    ports:
    - 8154:80
    profiles:
    - arrs
    - all
    restart: "no"
    volumes:
    - ${DOCKERDIR:-/opt/docker}/appdata/maintainerr:/opt/data
    - ${DOWNLOADSDIR:-/downloads}:/config/Downloads
  overseerr:
    container_name: overseerr
    environment:
      PGID: ${PGID:-1000}
      PORT: 5055
      PUID: ${PUID:-1000}
      TZ: ${TZ:-UTC}
    image: sctx/overseerr:latest
    labels:
    - traefik.enable=true
    - traefik.http.routers.overseerr-rtr.entrypoints=https
    - traefik.http.routers.overseerr-rtr.rule=Host(`overseerr.${DOMAINNAME_CLOUD_SERVER}`)
    - traefik.http.routers.overseerr-rtr.service=overseerr-svc
    - traefik.http.services.overseerr-svc.loadbalancer.server.port=5055
    - homepage.group=Request
    - homepage.name=Overseerr
    - homepage.icon=overseerr.png
    - homepage.href=https://overseerr.${DOMAINNAME_CLOUD_SERVER}
    - homepage.description=Request TV/Movies
    - homepage.weight=1
    - homepage.widget.type=overseerr
    - homepage.widget.url=http://overseerr:5055
    - homepage.widget.key=${OVERSEERR_API_KEY}
    networks:
    - t2_proxy
    ports:
    - 5055:5055
    profiles:
    - media
    - arrs
    - all
    restart: unless-stopped
    volumes:
    - ${DOCKERDIR:-/opt/docker}/appdata/overseerr:/app/config
  prowlarr:
    container_name: prowlarr
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
    environment:
      PGID: ${PGID:-1000}
      PUID: ${PUID:-1000}
      TZ: ${TZ:-UTC}
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 40s
      test:
      - CMD
      - wget
      - --no-verbose
      - --tries=1
      - --spider
      - http://localhost:9696/
      timeout: 10s
    image: ghcr.io/linuxserver/prowlarr:develop
    labels:
    - traefik.enable=true
    - traefik.http.routers.prowlarr-rtr.entrypoints=https
    - traefik.http.routers.prowlarr-rtr.rule=Host(`prowlarr.${DOMAINNAME_CLOUD_SERVER}`)
    - traefik.http.routers.prowlarr-rtr.middlewares=chain-oauth@file
    - traefik.http.routers.prowlarr-rtr.service=prowlarr-svc
    - traefik.http.services.prowlarr-svc.loadbalancer.server.port=9696
    - homepage.group=Meta
    - homepage.name=Prowlarr
    - homepage.icon=prowlarr.png
    - homepage.href=https://prowlarr.${DOMAINNAME_CLOUD_SERVER}
    - homepage.description=Indexer management
    - homepage.weight=3
    - homepage.widget.type=prowlarr
    - homepage.widget.url=http://prowlarr:9696
    - homepage.widget.key=${PROWLARR_API_KEY}
    logging:
      driver: json-file
      options:
        max-file: "3"
        max-size: 10m
        tag: '{{.Name}}'
    networks:
    - t2_proxy
    ports:
    - 9696:9696
    profiles:
    - apps
    - arrs
    - all
    restart: unless-stopped
    security_opt:
    - no-new-privileges:true
    volumes:
    - ${DOCKERDIR:-/opt/docker}/appdata/prowlarr:/config
    - /etc/localtime:/etc/localtime:ro
  radarr:
    container_name: radarr
    environment:
      PGID: ${PGID:-1000}
      PUID: ${PUID:-1000}
      TZ: ${TZ:-UTC}
    image: lscr.io/linuxserver/radarr:latest
    labels:
    - traefik.enable=true
    - traefik.http.routers.radarr-rtr-bypass.entrypoints=https
    - traefik.http.routers.radarr-rtr-bypass.rule=Host(`radarr.${DOMAINNAME_CLOUD_SERVER}`)
      && (Headers(`X-Api-Key`, `$RADARR_API_KEY`) || Query(`apikey`, `$RADARR_API_KEY`))
    - traefik.http.routers.radarr-rtr-bypass.rule=Host(`radarr.${DOMAINNAME_CLOUD_SERVER}`)
      && Headers(`traefik-auth-bypass-key`, `$TRAEFIK_AUTH_BYPASS_KEY`)
    - traefik.http.routers.radarr-rtr-bypass.priority=100
    - traefik.http.routers.radarr-rtr.entrypoints=https
    - traefik.http.routers.radarr-rtr.rule=Host(`radarr.${DOMAINNAME_CLOUD_SERVER}`)
    - traefik.http.routers.radarr-rtr.priority=99
    - traefik.http.routers.radarr-rtr-bypass.middlewares=chain-no-auth@file
    - traefik.http.routers.radarr-rtr.middlewares=chain-oauth@file
    - traefik.http.routers.radarr-rtr.service=radarr-svc
    - traefik.http.routers.radarr-rtr-bypass.service=radarr-svc
    - traefik.http.services.radarr-svc.loadbalancer.server.port=7878
    - homepage.group=Request
    - homepage.name=Radarr
    - homepage.icon=radarr.png
    - homepage.href=https://radarr.${DOMAINNAME_CLOUD_SERVER}
    - homepage.description=Movie management
    - homepage.weight=2
    - homepage.widget.type=radarr
    - homepage.widget.url=http://radarr:7878
    - homepage.widget.key=${RADARR_API_KEY}
    networks:
    - t2_proxy
    ports:
    - 7878:7878
    profiles:
    - media
    - arrs
    - all
    restart: "no"
    volumes:
    - ${DOCKERDIR:-/opt/docker}/appdata/radarr:/config
    - ${DATADIR:-/data}:/data/
    - /etc/localtime:/etc/localtime:ro
    - $DATADIR/complete/radarr:/data/complete/radarr
    - $DATADIR/Movies:/data/Movies
  readarr:
    container_name: readarr
    environment:
      PGID: ${PGID:-1000}
      PUID: ${PUID:-1000}
      TZ: ${TZ:-UTC}
      UMASK: 2
    image: hotio/readarr:nightly
    labels:
    - traefik.enable=true
    - traefik.http.routers.readarr-rtr.entrypoints=https
    - traefik.http.routers.readarr-rtr.rule=Host(`readarr.${DOMAINNAME_CLOUD_SERVER}`)
    - traefik.http.routers.readarr-rtr.middlewares=chain-oauth@file
    - traefik.http.routers.readarr-rtr.service=readarr-svc
    - traefik.http.services.readarr-svc.loadbalancer.server.port=8787
    - homepage.group=Request
    - homepage.name=Readarr
    - homepage.icon=readarr.png
    - homepage.href=https://readarr.${DOMAINNAME_CLOUD_SERVER}
    - homepage.description=Book management
    - homepage.weight=4
    - homepage.widget.type=readarr
    - homepage.widget.url=http://readarr:8787
    - homepage.widget.key=${READARR_API_KEY}
    networks:
    - t2_proxy
    ports:
    - 8787:8787
    profiles:
    - media
    - arrs
    - all
    restart: "no"
    volumes:
    - ${DOCKERDIR:-/opt/docker}/appdata/readarr:/config
    - ${DATADIR:-/data}:/data
    - /etc/localtime:/etc/localtime:ro
  sonarr:
    container_name: sonarr
    environment:
      PGID: ${PGID:-1000}
      PUID: ${PUID:-1000}
      TZ: ${TZ:-UTC}
    image: lscr.io/linuxserver/sonarr
    labels:
    - traefik.enable=true
    - traefik.http.routers.sonarr-rtr-bypass.rule=Host(`sonarr.${DOMAINNAME_CLOUD_SERVER}`)
      && Headers(`traefik-auth-bypass-key`, `$TRAEFIK_AUTH_BYPASS_KEY`)
    - traefik.http.routers.sonarr-rtr.entrypoints=https
    - traefik.http.routers.sonarr-rtr.rule=Host(`sonarr.${DOMAINNAME_CLOUD_SERVER}`)
    - traefik.http.routers.sonarr-rtr.priority=99
    - traefik.http.routers.sonarr-rtr.middlewares=chain-oauth@file
    - traefik.http.routers.sonarr-rtr.service=sonarr-svc
    - traefik.http.services.sonarr-svc.loadbalancer.server.port=8989
    - homepage.group=Request
    - homepage.name=Sonarr
    - homepage.icon=sonarr.png
    - homepage.href=https://sonarr.${DOMAINNAME_CLOUD_SERVER}
    - homepage.description=TV management
    - homepage.weight=2
    - homepage.widget.type=sonarr
    - homepage.widget.url=http://sonarr:8989
    - homepage.widget.key=${SONARR_API_KEY}
    networks:
    - t2_proxy
    ports:
    - 8989:8989
    profiles:
    - media
    - arrs
    - all
    restart: "no"
    volumes:
    - ${DOCKERDIR:-/opt/docker}/appdata/sonarr:/config
    - $DATADIR/complete/sonarr:/data/complete/sonarr
    - $DATADIR/TV:/data/TV
    - /etc/localtime:/etc/localtime:ro
  tdarr:
    container_name: tdarr
    environment:
      PGID: ${PGID:-1000}
      PUID: ${PUID:-1000}
      TZ: ${TZ:-UTC}
      UMASK_SET: 2
      serverIP: tdarr
      serverPort: 8266
      webUIPort: 8265
    image: haveagitgat/tdarr:latest
    labels:
    - traefik.enable=true
    - traefik.http.routers.tdarr-rtr.entrypoints=https
    - traefik.http.routers.tdarr-rtr.rule=Host(`tdarr.${DOMAINNAME_CLOUD_SERVER}`)
    - traefik.http.routers.tdarr-rtr.middlewares=chain-oauth@file
    - traefik.http.routers.tdarr-rtr.service=tdarr-svc
    - traefik.http.services.tdarr-svc.loadbalancer.server.port=8265
    - homepage.group=Meta
    - homepage.name=TDarr
    - homepage.icon=tdarr.png
    - homepage.href=https://tdarr.${DOMAINNAME_CLOUD_SERVER}
    - homepage.description=Transcode automation
    - homepage.weight=4
    networks:
    - t2_proxy
    ports:
    - 8265:8265
    - 8266:8266
    - 8267:8267
    profiles:
    - arrs
    - all
    restart: unless-stopped
    volumes:
    - ${DOCKERDIR:-/opt/docker}/appdata/tdarr:/app/server
    - ${DOCKERDIR:-/opt/docker}/appdata/tdarr/configs:/app/configs
    - ${DOCKERDIR:-/opt/docker}/appdata/tdarr/logs:/app/logs
    - ${INCOMPLETEDIR:-/incomplete}:/data/temp
    - $DATADIR/Photos:/data/media:ro
    - $COMPLETEDIR/tdarr:/data/output
  tdarr-node1:
    container_name: tdarr-node1
    devices:
    - /dev/dri:/dev/dri
    environment:
      PGID: ${PGID:-1000}
      PUID: ${PUID:-1000}
      TZ: ${TZ:-UTC}
      UMASK_SET: 2
      nodeID: Node1
      nodeIP: tdarr-node1
      nodePort: 8267
      serverIP: tdarr
      serverPort: 8266
    image: haveagitgat/tdarr_node:latest
    networks:
    - t2_proxy
    profiles:
    - arrs
    - all
    restart: unless-stopped
    volumes:
    - ${DOCKERDIR:-/opt/docker}/appdata/tdarr/configs:/app/configs
    - ${DOCKERDIR:-/opt/docker}/appdata/tdarr/logs:/app/logs
    - $DATADIR/transcode:/data/temp
    - $DATADIR/Photos/zVideos:/data/media:ro
    - $DATADIR/zvideos:/data/output
  whisparr:
    container_name: whisparr
    environment:
      PGID: ${PGID:-1000}
      PUID: ${PUID:-1000}
      TZ: ${TZ:-UTC}
      UMASK: 2
    image: ghcr.io/hotio/whisparr
    labels:
    - traefik.enable=true
    - traefik.http.routers.whisparr-rtr-bypass.entrypoints=https
    - traefik.http.routers.whisparr-rtr-bypass.priority=100
    - traefik.http.routers.whisparr-rtr.entrypoints=https
    - traefik.http.routers.whisparr-rtr.rule=Host(`whisparr.${DOMAINNAME_CLOUD_SERVER}`)
    - traefik.http.routers.whisparr-rtr.priority=99
    - traefik.http.routers.whisparr-rtr-bypass.middlewares=chain-no-auth@file
    - traefik.http.routers.whisparr-rtr.middlewares=chain-oauth@file
    - traefik.http.routers.whisparr-rtr.service=whisparr-svc
    - traefik.http.routers.whisparr-rtr-bypass.service=whisparr-svc
    - traefik.http.services.whisparr-svc.loadbalancer.server.port=6969
    networks:
    - t2_proxy
    ports:
    - 6969:6969
    profiles:
    - media
    - arrs
    - all
    restart: "no"
    volumes:
    - ${DOCKERDIR:-/opt/docker}/appdata/whisparr:/config
    - ${DATADIR:-/data}:/data
    - /etc/localtime:/etc/localtime:ro
  wizarr:
    container_name: wizarr
    environment:
      PGID: ${PGID:-1000}
      PUID: ${PUID:-1000}
      TZ: ${TZ:-UTC}
      UMASK: 2
    image: ghcr.io/wizarrrr/wizarr:latest
    labels:
    - traefik.enable=true
    - traefik.http.routers.wizarr-rtr.entrypoints=https
    - traefik.http.routers.wizarr-rtr.rule=Host(`wizarr.${DOMAINNAME_CLOUD_SERVER}`)
    - traefik.http.routers.wizarr-rtr.middlewares=chain-oauth@file
    - traefik.http.routers.wizarr-rtr.service=wizarr-svc
    - traefik.http.services.wizarr-svc.loadbalancer.server.port=5690
    - homepage.group=Admin
    - homepage.name=Wizarr
    - homepage.icon=wizarr.png
    - homepage.href=https://wizarr.${DOMAINNAME_CLOUD_SERVER}
    - homepage.description=Invites for plex, overseerr
    - homepage.weight=1
    networks:
    - t2_proxy
    ports:
    - 5690:5690
    profiles:
    - arrs
    - all
    restart: "no"
    volumes:
    - ${DOCKERDIR:-/opt/docker}/appdata/wizarr/database:/data/database

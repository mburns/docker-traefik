# *ARR Services

services:
  # Prowlarr - Torrent proxy
  prowlarr:
    image: ghcr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    profiles: ["apps", "arrs", "all"]
    networks:
      - t2_proxy
    ports:
      - "9696:9696"
    volumes:
      - ${DOCKERDIR:-/opt/docker}/appdata/prowlarr:/config
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      TZ: ${TZ:-UTC}
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9696/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.prowlarr-rtr.entrypoints=https"
      - "traefik.http.routers.prowlarr-rtr.rule=Host(`prowlarr.${DOMAINNAME_CLOUD_SERVER}`)"
      ## Middlewares
      - "traefik.http.routers.prowlarr-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.prowlarr-rtr.service=prowlarr-svc"
      - "traefik.http.services.prowlarr-svc.loadbalancer.server.port=9696"
      ## Homepage
      - homepage.group=Meta
      - homepage.name=Prowlarr
      - homepage.icon=prowlarr.png
      - homepage.href=https://prowlarr.${DOMAINNAME_CLOUD_SERVER}
      - homepage.description=Indexer management
      - homepage.weight=3
      - homepage.widget.type=prowlarr
      - homepage.widget.url=http://prowlarr:9696
      - homepage.widget.key=${PROWLARR_API_KEY}

  jackett:
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    profiles: ["apps", "arrs", "all"]
    networks:
      - t2_proxy
    environment:
      - TZ=${TZ:-UTC}
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - AUTO_UPDATE=true #optional
      # - RUN_OPTS= #optional
    volumes:
      - ${DOCKERDIR:-/opt/docker}/appdata/jackett:/config
      - /tmp/jackett:/downloads
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - 9117:9117
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9117/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.jackett-rtr.entrypoints=https"
      - "traefik.http.routers.jackett-rtr.rule=Host(`jackett.${DOMAINNAME_CLOUD_SERVER}`)"
      ## Middlewares
      - "traefik.http.routers.jackett-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.jackett-rtr.service=jackett-svc"
      - "traefik.http.services.jackett-svc.loadbalancer.server.port=9117"
      ## Homepage
      - homepage.group=Meta
      - homepage.name=Jackett
      - homepage.icon=jackett.png
      - homepage.href=https://jackett.${DOMAINNAME_CLOUD_SERVER}
      - homepage.description=Indexer management
      - homepage.weight=3
      - homepage.widget.type=jackett
      - homepage.widget.url=http://jackett:9117
      # - homepage.widget.key=${JACKETT_API_KEY}

  ############################# PVRS
  
  # Bazarr - Subtitle Management

  bazarr:
    image: lscr.io/linuxserver/bazarr
    container_name: bazarr
    security_opt:
      - no-new-privileges:true
    restart: "no"
    profiles: ["arrs", "all"]
    networks:
      - t2_proxy
    ports:
      - "6767:6767"
    volumes:
      - ${DOCKERDIR:-/opt/docker}/appdata/bazarr:/config
      - ${DATADIR:-/data}:/data
    environment:
      TZ: ${TZ:-UTC}
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:6767/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth
      - "traefik.http.routers.bazarr-rtr.entrypoints=https"
      - "traefik.http.routers.bazarr-rtr.rule=Host(`bazarr.${DOMAINNAME_CLOUD_SERVER}`)"
      ## Middlewares
      - "traefik.http.routers.bazarr-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.bazarr-rtr.service=bazarr-svc"
      - "traefik.http.services.bazarr-svc.loadbalancer.server.port=6767"
      ## Homepage
      - homepage.group=Meta
      - homepage.name=Bazarr
      - homepage.icon=bazarr.png
      - homepage.href=https://bazarr.${DOMAINNAME_CLOUD_SERVER}
      - homepage.description=Subtitle management
      - homepage.weight=5
      - homepage.widget.type=bazarr
      - homepage.widget.url=http://bazarr:6767
      - homepage.widget.key=${BAZARR_API_KEY}

  kapowarr:
    image: mrcas/kapowarr:latest
    container_name: kapowarr
    # security_opt:
    #   - no-new-privileges:true
    restart: "no"
    profiles: ["media", "arrs", "all"]
    networks:
      - t2_proxy
    ports:
      - '5656:5656'
    volumes:
      - ${DOCKERDIR:-/opt/docker}/appdata/kapowarr:/app/db
      # - ${DOCKERDIR:-/opt/docker}/appdata/kapowarr:/config
      - ${DATADIR:-/data}:/data
      - ${DOWNLOADSDIR:-/downloads}:/config/Downloads
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      TZ: ${TZ:-UTC}
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.kapowarr-rtr-bypass.entrypoints=https"
      #- "traefik.http.routers.kapowarr-rtr-bypass.rule=Host(`kapowarr.${DOMAINNAME_CLOUD_SERVER}`) && (Headers(`X-Api-Key`, `$SONARR_API_KEY`) || Query(`apikey`, `$SONARR_API_KEY`))"
      # - "traefik.http.routers.kapowarr-rtr-bypass.rule=Host(`kapowarr.${DOMAINNAME_CLOUD_SERVER}`) && Headers(`traefik-auth-bypass-key`, `$TRAEFIK_AUTH_BYPASS_KEY`)" # Bypass Auth for LunaSea on iOS
      - "traefik.http.routers.kapowarr-rtr-bypass.priority=100"
      ## HTTP Routers Auth
      - "traefik.http.routers.kapowarr-rtr.entrypoints=https"
      - "traefik.http.routers.kapowarr-rtr.rule=Host(`kapowarr.${DOMAINNAME_CLOUD_SERVER}`)"
      - "traefik.http.routers.kapowarr-rtr.priority=99"
      ## Middlewares
      - "traefik.http.routers.kapowarr-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.kapowarr-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.kapowarr-rtr.service=kapowarr-svc"
      - "traefik.http.routers.kapowarr-rtr-bypass.service=kapowarr-svc"
      - "traefik.http.services.kapowarr-svc.loadbalancer.server.port=5656"
      - homepage.group=Request
      - homepage.name=Kapowarr
      - homepage.icon=kapowarr.png
      - homepage.href=https://kapowarr.${DOMAINNAME_CLOUD_SERVER}
      - homepage.description=Comics management
      - homepage.weight=6
      # - homepage.widget.type=kapowarr
      # - homepage.widget.url=http://kapowarr:5656/
      # - homepage.widget.key=${KAPOWARR_API_KEY}

  # Lidarr - Music Management
  # Set url_base in lidarr settings if using PathPrefix

  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    # security_opt:
    #   - no-new-privileges:true
    restart: "no"
    profiles: ["media", "arrs", "all"]
    networks:
      - t2_proxy
    ports:
      - "8686:8686"
    volumes:
      - ${DOCKERDIR:-/opt/docker}/appdata/lidarr:/config
      - ${DATADIR:-/data}:/data
      - ${DOWNLOADSDIR:-/downloads}:/downloads
      # - $COMPLETEDIR/lidarr:/config/Downloads/complete/lidarr
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      TZ: ${TZ:-UTC}
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.lidarr-rtr-bypass.entrypoints=https"
      #- "traefik.http.routers.lidarr-rtr-bypass.rule=Host(`lidarr.${DOMAINNAME_CLOUD_SERVER}`) && (Headers(`X-Api-Key`, `$LIDARR_API_KEY`) || Query(`apikey`, `$LIDARR_API_KEY`))"
      - "traefik.http.routers.lidarr-rtr-bypass.rule=Host(`lidarr.${DOMAINNAME_CLOUD_SERVER}`) && Headers(`traefik-auth-bypass-key`, `$TRAEFIK_AUTH_BYPASS_KEY`)" # Bypass Auth for LunaSea on iOS
      - "traefik.http.routers.lidarr-rtr-bypass.priority=100"
      ## HTTP Routers Auth
      - "traefik.http.routers.lidarr-rtr.entrypoints=https"
      - "traefik.http.routers.lidarr-rtr.rule=Host(`lidarr.${DOMAINNAME_CLOUD_SERVER}`)"
      - "traefik.http.routers.lidarr-rtr.priority=99"
      ## Middlewares
      - "traefik.http.routers.lidarr-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.lidarr-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.lidarr-rtr.service=lidarr-svc"
      - "traefik.http.routers.lidarr-rtr-bypass.service=lidarr-svc"
      - "traefik.http.services.lidarr-svc.loadbalancer.server.port=8686"
      ## Homepage
      - homepage.group=Request
      - homepage.name=Lidarr
      - homepage.icon=lidarr.png
      - homepage.href=https://lidarr.${DOMAINNAME_CLOUD_SERVER}
      - homepage.description=Music management
      - homepage.weight=3
      - homepage.widget.type=lidarr
      - homepage.widget.url=http://lidarr:8686
      - homepage.widget.key=${LIDARR_API_KEY}

  maintainerr:
    image: jorenn92/maintainerr:latest
    container_name: maintainerr
    volumes:
      - ${DOCKERDIR:-/opt/docker}/appdata/maintainerr:/opt/data
      - ${DOWNLOADSDIR:-/downloads}:/config/Downloads
    ports:
      - 8154:80
    restart: "no"
    profiles: ["arrs", "all"]
    networks:
      - t2_proxy
    environment:
      TZ: ${TZ:-UTC}
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
      UMASK: 002
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth
      - "traefik.http.routers.maintainerr-rtr.entrypoints=https"
      - "traefik.http.routers.maintainerr-rtr.rule=Host(`maintainerr.${DOMAINNAME_CLOUD_SERVER}`)"
      ## Middlewares
      - "traefik.http.routers.maintainerr-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.maintainerr-rtr.service=maintainerr-svc"
      - "traefik.http.services.maintainerr-svc.loadbalancer.server.port=80"
      ## Homepage
      - homepage.group=Meta
      - homepage.name=Maintainerr
      - homepage.icon=maintainerr.png
      - homepage.href=https://maintainerr.${DOMAINNAME_CLOUD_SERVER}
      - homepage.description=Smells like Overseerr, does the opposite
      - homepage.weight=4

  # Overseerr - Get recommendations and request media downloads
  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    # security_opt:
    #   - no-new-privileges:true
    environment:
      TZ: ${TZ:-UTC}
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
      PORT: 5055 #optional
      # LOG_LEVEL: debug
    ports:
      - 5055:5055
    volumes:
      - ${DOCKERDIR:-/opt/docker}/appdata/overseerr:/app/config
    restart: unless-stopped
    profiles: ["media", "arrs", "all"]
    networks:
      - t2_proxy
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth
      - "traefik.http.routers.overseerr-rtr.entrypoints=https"
      - "traefik.http.routers.overseerr-rtr.rule=Host(`overseerr.${DOMAINNAME_CLOUD_SERVER}`)"
      ## Middlewares
      #- "traefik.http.routers.overseerr-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.overseerr-rtr.service=overseerr-svc"
      - "traefik.http.services.overseerr-svc.loadbalancer.server.port=5055"
      ## Homepage
      - homepage.group=Request
      - homepage.name=Overseerr
      - homepage.icon=overseerr.png
      - homepage.href=https://overseerr.${DOMAINNAME_CLOUD_SERVER}
      - homepage.description=Request TV/Movies
      - homepage.weight=1
      - homepage.widget.type=overseerr
      - homepage.widget.url=http://overseerr:5055
      - homepage.widget.key=${OVERSEERR_API_KEY}

  # Radarr - Movie management
  # Set url_base in radarr settings if using PathPrefix
  radarr:
    image: lscr.io/linuxserver/radarr:latest # latest was causing "Error parsing column 45"
    container_name: radarr
    # security_opt:
    #   - no-new-privileges:true
    restart: "no"
    profiles: ["media", "arrs", "all"]
    networks:
      - t2_proxy
    ports:
      - "7878:7878"
    volumes:
      - ${DOCKERDIR:-/opt/docker}/appdata/radarr:/config
      - ${DATADIR:-/data}:/data/
      - "/etc/localtime:/etc/localtime:ro"

      - $DATADIR/complete/radarr:/data/complete/radarr
      - $DATADIR/Movies:/data/Movies

    environment:
      TZ: ${TZ:-UTC}
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.radarr-rtr-bypass.entrypoints=https"
      - "traefik.http.routers.radarr-rtr-bypass.rule=Host(`radarr.${DOMAINNAME_CLOUD_SERVER}`) && (Headers(`X-Api-Key`, `$RADARR_API_KEY`) || Query(`apikey`, `$RADARR_API_KEY`))"
      - "traefik.http.routers.radarr-rtr-bypass.rule=Host(`radarr.${DOMAINNAME_CLOUD_SERVER}`) && Headers(`traefik-auth-bypass-key`, `$TRAEFIK_AUTH_BYPASS_KEY`)" # Bypass Auth for LunaSea on iOS
      - "traefik.http.routers.radarr-rtr-bypass.priority=100"
      ## HTTP Routers Auth
      - "traefik.http.routers.radarr-rtr.entrypoints=https"
      - "traefik.http.routers.radarr-rtr.rule=Host(`radarr.${DOMAINNAME_CLOUD_SERVER}`)"
      - "traefik.http.routers.radarr-rtr.priority=99"
      ## Middlewares
      - "traefik.http.routers.radarr-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.radarr-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.radarr-rtr.service=radarr-svc"
      - "traefik.http.routers.radarr-rtr-bypass.service=radarr-svc"
      - "traefik.http.services.radarr-svc.loadbalancer.server.port=7878"
      ## Homepage
      - homepage.group=Request
      - homepage.name=Radarr
      - homepage.icon=radarr.png
      - homepage.href=https://radarr.${DOMAINNAME_CLOUD_SERVER}
      - homepage.description=Movie management
      - homepage.weight=2
      - homepage.widget.type=radarr
      - homepage.widget.url=http://radarr:7878
      - homepage.widget.key=${RADARR_API_KEY}

  # Readarr - Books management
  # Set url_base in readarr settings if using PathPrefix
  readarr:
    image: hotio/readarr:nightly
    container_name: readarr
    # security_opt:
    #   - no-new-privileges:true
    restart: "no"
    profiles: ["media", "arrs", "all"]
    networks:
      - t2_proxy
    ports:
      - "8787:8787"
    volumes:
      - ${DOCKERDIR:-/opt/docker}/appdata/readarr:/config
      - ${DATADIR:-/data}:/data
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      TZ: ${TZ:-UTC}
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
      UMASK: 002
      #ARGS: ""
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth
      - "traefik.http.routers.readarr-rtr.entrypoints=https"
      - "traefik.http.routers.readarr-rtr.rule=Host(`readarr.${DOMAINNAME_CLOUD_SERVER}`)"
      ## Middlewares
      - "traefik.http.routers.readarr-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.readarr-rtr.service=readarr-svc"
      - "traefik.http.services.readarr-svc.loadbalancer.server.port=8787"
      ## Homepage
      - homepage.group=Request
      - homepage.name=Readarr
      - homepage.icon=readarr.png
      - homepage.href=https://readarr.${DOMAINNAME_CLOUD_SERVER}
      - homepage.description=Book management
      - homepage.weight=4
      - homepage.widget.type=readarr
      - homepage.widget.url=http://readarr:8787
      - homepage.widget.key=${READARR_API_KEY}

  # Sonarr - TV Shows management
  # Set url_base in sonarr settings if using PathPrefix
  sonarr:
    image: lscr.io/linuxserver/sonarr
    container_name: sonarr
    # security_opt:
    #   - no-new-privileges:true
    restart: "no"
    profiles: ["media", "arrs", "all"]
    networks:
      - t2_proxy
    ports:
      - "8989:8989"
    volumes:
      - ${DOCKERDIR:-/opt/docker}/appdata/sonarr:/config
      - $DATADIR/complete/sonarr:/data/complete/sonarr
      - $DATADIR/TV:/data/TV
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      TZ: ${TZ:-UTC}
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      # - "traefik.http.routers.sonarr-rtr-bypass.entrypoints=https"
      #- "traefik.http.routers.sonarr-rtr-bypass.rule=Host(`sonarr.${DOMAINNAME_CLOUD_SERVER}`) && (Headers(`X-Api-Key`, `$SONARR_API_KEY`) || Query(`apikey`, `$SONARR_API_KEY`))"
      - "traefik.http.routers.sonarr-rtr-bypass.rule=Host(`sonarr.${DOMAINNAME_CLOUD_SERVER}`) && Headers(`traefik-auth-bypass-key`, `$TRAEFIK_AUTH_BYPASS_KEY`)" # Bypass Auth for LunaSea on iOS
      # - "traefik.http.routers.sonarr-rtr-bypass.priority=100"
      ## HTTP Routers Auth
      - "traefik.http.routers.sonarr-rtr.entrypoints=https"
      - "traefik.http.routers.sonarr-rtr.rule=Host(`sonarr.${DOMAINNAME_CLOUD_SERVER}`)"
      - "traefik.http.routers.sonarr-rtr.priority=99"
      ## Middlewares
      # - "traefik.http.routers.sonarr-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.sonarr-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.sonarr-rtr.service=sonarr-svc"
      # - "traefik.http.routers.sonarr-rtr-bypass.service=sonarr-svc"
      - "traefik.http.services.sonarr-svc.loadbalancer.server.port=8989"
      ## Homepage
      - homepage.group=Request
      - homepage.name=Sonarr
      - homepage.icon=sonarr.png
      - homepage.href=https://sonarr.${DOMAINNAME_CLOUD_SERVER}
      - homepage.description=TV management
      - homepage.weight=2
      - homepage.widget.type=sonarr
      - homepage.widget.url=http://sonarr:8989
      - homepage.widget.key=${SONARR_API_KEY}

  # Tdarr Server - Library Optimizer
  tdarr:
    image: haveagitgat/tdarr:latest
    container_name: tdarr
    # security_opt:
    #   - no-new-privileges:true
    restart: unless-stopped
    profiles: ["arrs", "all"]
    networks:
      - t2_proxy
    ports:
      - 8265:8265
      - 8266:8266
      - 8267:8267 # node port. It should be mapped on this container because the node container use the network from the main container
    volumes:
      - ${DOCKERDIR:-/opt/docker}/appdata/tdarr:/app/server
      - ${DOCKERDIR:-/opt/docker}/appdata/tdarr/configs:/app/configs
      - ${DOCKERDIR:-/opt/docker}/appdata/tdarr/logs:/app/logs
      - ${INCOMPLETEDIR:-/incomplete}:/data/temp
      - $DATADIR/Photos:/data/media:ro
      - $COMPLETEDIR/tdarr:/data/output
    environment:
      TZ: ${TZ:-UTC}
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
      serverIP: tdarr # or hostname
      serverPort: 8266
      webUIPort: 8265
      UMASK_SET: 002
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.tdarr-rtr.entrypoints=https"
      - "traefik.http.routers.tdarr-rtr.rule=Host(`tdarr.${DOMAINNAME_CLOUD_SERVER}`)"
      ## Middlewares
      - "traefik.http.routers.tdarr-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.tdarr-rtr.service=tdarr-svc"
      - "traefik.http.services.tdarr-svc.loadbalancer.server.port=8265"
      ## Homepage
      - homepage.group=Meta
      - homepage.name=TDarr
      - homepage.icon=tdarr.png
      - homepage.href=https://tdarr.${DOMAINNAME_CLOUD_SERVER}
      - homepage.description=Transcode automation
      - homepage.weight=4

  # Tdarr Node - Transcoder Node
  tdarr-node1:
    image: haveagitgat/tdarr_node:latest
    container_name: tdarr-node1
    # security_opt:
    #   - no-new-privileges:true
    restart: unless-stopped
    profiles: ["arrs", "all"]
    networks:
      - t2_proxy
    devices:
      - /dev/dri:/dev/dri # for hardware transcoding
    environment:
      TZ: ${TZ:-UTC}
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
      UMASK_SET: 002
      nodeID: Node1
      nodeIP: tdarr-node1 # or hostname
      nodePort: 8267
      serverIP: tdarr # or hostname
      serverPort: 8266
    volumes:
      - ${DOCKERDIR:-/opt/docker}/appdata/tdarr/configs:/app/configs
      - ${DOCKERDIR:-/opt/docker}/appdata/tdarr/logs:/app/logs
      - $DATADIR/transcode:/data/temp
      - $DATADIR/Photos/zVideos:/data/media:ro
      - $DATADIR/zvideos:/data/output

  # Adult videos
  whisparr:
    image: ghcr.io/hotio/whisparr
    container_name: whisparr
    # security_opt:
    #   - no-new-privileges:true
    restart: "no"
    profiles: ["media", "arrs", "all"]
    networks:
      - t2_proxy
    ports:
      - "6969:6969"
    environment:
      TZ: ${TZ:-UTC}
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
      UMASK: 002
    volumes:
      - ${DOCKERDIR:-/opt/docker}/appdata/whisparr:/config
      - ${DATADIR:-/data}:/data
      - "/etc/localtime:/etc/localtime:ro"
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.whisparr-rtr-bypass.entrypoints=https"
      # - "traefik.http.routers.whisparr-rtr-bypass.rule=Host(`whisparr.${DOMAINNAME_CLOUD_SERVER}`) && (Headers(`X-Api-Key`, `$WHISPARR_API_KEY`) || Query(`apikey`, `$WHISPARR_API_KEY`))"
      # - "traefik.http.routers.whisparr-rtr-bypass.rule=Host(`whisparr.${DOMAINNAME_CLOUD_SERVER}`) && Headers(`traefik-auth-bypass-key`, `$TRAEFIK_AUTH_BYPASS_KEY`)" # Bypass Auth for LunaSea on iOS
      - "traefik.http.routers.whisparr-rtr-bypass.priority=100"
      ## HTTP Routers Auth
      - "traefik.http.routers.whisparr-rtr.entrypoints=https"
      - "traefik.http.routers.whisparr-rtr.rule=Host(`whisparr.${DOMAINNAME_CLOUD_SERVER}`)"
      - "traefik.http.routers.whisparr-rtr.priority=99"
      ## Middlewares
      - "traefik.http.routers.whisparr-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.whisparr-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.whisparr-rtr.service=whisparr-svc"
      - "traefik.http.routers.whisparr-rtr-bypass.service=whisparr-svc"
      - "traefik.http.services.whisparr-svc.loadbalancer.server.port=6969"

  # Wizarr is an advanced user invitation and management system for Jellyfin, Plex, Emby etc. 
  wizarr:
    container_name: wizarr
    image: ghcr.io/wizarrrr/wizarr:latest
    ports:
      - 5690:5690
    volumes:
      - ${DOCKERDIR:-/opt/docker}/appdata/wizarr/database:/data/database
    restart: "no"
    profiles: ["arrs", "all"]
    networks:
      - t2_proxy
    environment:
      TZ: ${TZ:-UTC}
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
      UMASK: 002
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth
      - "traefik.http.routers.wizarr-rtr.entrypoints=https"
      - "traefik.http.routers.wizarr-rtr.rule=Host(`wizarr.${DOMAINNAME_CLOUD_SERVER}`)"
      ## Middlewares
      - "traefik.http.routers.wizarr-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.wizarr-rtr.service=wizarr-svc"
      - "traefik.http.services.wizarr-svc.loadbalancer.server.port=5690"
      ## Homepage
      - homepage.group=Admin
      - homepage.name=Wizarr
      - homepage.icon=wizarr.png
      - homepage.href=https://wizarr.${DOMAINNAME_CLOUD_SERVER}
      - homepage.description=Invites for plex, overseerr
      - homepage.weight=1

  lidatube:
    image: thewicklowwolf/lidatube:latest
    container_name: lidatube
    volumes:
      - ${DOCKERDIR:-/opt/docker}/appdata/lidatube/database:/lidatube/config
      - ${DOWNLOADSDIR:-/downloads}:/lidatube/downloads
      - ${DATADIR:-/data}:/data
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 5190:5000
    # restart: unless-stopped
    profiles: ["arrs", "all"]
    networks:
      - t2_proxy
    environment:
      TZ: ${TZ:-UTC}
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
      UMASK: 002
      lidarr_address: "http://lidarr:8686" 
      lidarr_api_key: $LIDARR_API_KEY 
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth
      - "traefik.http.routers.lidatube-rtr.entrypoints=https"
      - "traefik.http.routers.lidatube-rtr.rule=Host(`lidatube.${DOMAINNAME_CLOUD_SERVER}`)"
      ## Middlewares
      - "traefik.http.routers.lidatube-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.lidatube-rtr.service=lidatube-svc"
      - "traefik.http.services.lidatube-svc.loadbalancer.server.port=5000"
      ## Homepage
      - homepage.group=Downloaders
      - homepage.name=Lidatube
        # - homepage.icon=wizarr.png
      - homepage.href=https://lidatube.${DOMAINNAME_CLOUD_SERVER}
      - homepage.description=Find missing Lidar images via Youtube
      - homepage.weight=1

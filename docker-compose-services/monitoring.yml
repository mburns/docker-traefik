# Monitoring Services
# Monitoring, metrics, and logging applications


networks:
  t2_proxy:
    external: true

services:
  # Grafana - Metrics Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    profiles: ["monitoring", "all"]
    networks:
      - t2_proxy
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    volumes:
      - ${DOCKERDIR:-/opt/docker}/appdata/grafana:/var/lib/grafana
    environment:
      TZ: ${TZ:-UTC}
      GF_SECURITY_ADMIN_PASSWORD: $GRAFANA_PASSWORD
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"
    labels:
      - sablier.enable=true
      - sablier.group=mygroup
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.grafana-rtr.entrypoints=https"
      - "traefik.http.routers.grafana-rtr.rule=Host(`grafana.${DOMAINNAME_CLOUD_SERVER}`)"
      ## Middlewares
      - "traefik.http.routers.grafana-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.grafana-rtr.service=grafana-svc"
      - "traefik.http.services.grafana-svc.loadbalancer.server.port=3000"
      ## Homepage
      - homepage.group=Monitoring
      - homepage.name=Grafana
      - homepage.icon=grafana.png
      - homepage.href=https://grafana.${DOMAINNAME_CLOUD_SERVER}
      - homepage.description=Metrics dashboard
      - homepage.weight=1

  # Prometheus - Metrics Collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    profiles: ["monitoring", "all"]
    networks:
      - t2_proxy
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ${DOCKERDIR:-/opt/docker}/appdata/prometheus:/etc/prometheus
      - ${DOCKERDIR:-/opt/docker}/appdata/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    environment:
      TZ: ${TZ:-UTC}
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"
    labels:
      - sablier.enable=true
      - sablier.group=mygroup
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.prometheus-rtr.entrypoints=https"
      - "traefik.http.routers.prometheus-rtr.rule=Host(`prometheus.${DOMAINNAME_CLOUD_SERVER}`)"
      ## Middlewares
      - "traefik.http.routers.prometheus-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.prometheus-rtr.service=prometheus-svc"
      - "traefik.http.services.prometheus-svc.loadbalancer.server.port=9090"
      ## Homepage
      - homepage.group=Monitoring
      - homepage.name=Prometheus
      - homepage.icon=prometheus.png
      - homepage.href=https://prometheus.${DOMAINNAME_CLOUD_SERVER}
      - homepage.description=Metrics collection
      - homepage.weight=2

  # InfluxDB - Time Series Database
  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    restart: unless-stopped
    profiles: ["monitoring", "all"]
    networks:
      - t2_proxy
    ports:
      - "${INFLUXDB_PORT:-8086}:8086"
    volumes:
      - ${DOCKERDIR:-/opt/docker}/appdata/influxdb:/var/lib/influxdb2
    environment:
      TZ: ${TZ:-UTC}
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: $INFLUXDB_USERNAME
      DOCKER_INFLUXDB_INIT_PASSWORD: $INFLUXDB_PASSWORD
      DOCKER_INFLUXDB_INIT_ORG: $INFLUXDB_ORG
      DOCKER_INFLUXDB_INIT_BUCKET: $INFLUXDB_BUCKET
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: $INFLUXDB_TOKEN
    healthcheck:
      test: ["CMD", "influx", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"
    labels:
      - sablier.enable=true
      - sablier.group=mygroup
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.influxdb-rtr.entrypoints=https"
      - "traefik.http.routers.influxdb-rtr.rule=Host(`influxdb.${DOMAINNAME_CLOUD_SERVER}`)"
      ## Middlewares
      - "traefik.http.routers.influxdb-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.influxdb-rtr.service=influxdb-svc"
      - "traefik.http.services.influxdb-svc.loadbalancer.server.port=8086"
      ## Homepage
      - homepage.group=Monitoring
      - homepage.name=InfluxDB
      - homepage.icon=influxdb.png
      - homepage.href=https://influxdb.${DOMAINNAME_CLOUD_SERVER}
      - homepage.description=Time series database
      - homepage.weight=3

  # Loki - Log Aggregation
  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: unless-stopped
    profiles: ["monitoring", "all"]
    networks:
      - t2_proxy
    ports:
      - "${LOKI_PORT:-3100}:3100"
    volumes:
      - ${DOCKERDIR:-/opt/docker}/appdata/loki:/etc/loki
    command: -config.file=/etc/loki/local-config.yaml
    environment:
      TZ: ${TZ:-UTC}
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"
    labels:
      - sablier.enable=true
      - sablier.group=mygroup
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.loki-rtr.entrypoints=https"
      - "traefik.http.routers.loki-rtr.rule=Host(`loki.${DOMAINNAME_CLOUD_SERVER}`)"
      ## Middlewares
      - "traefik.http.routers.loki-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.loki-rtr.service=loki-svc"
      - "traefik.http.services.loki-svc.loadbalancer.server.port=3100"
      ## Homepage
      - homepage.group=Monitoring
      - homepage.name=Loki
      - homepage.icon=loki.png
      - homepage.href=https://loki.${DOMAINNAME_CLOUD_SERVER}
      - homepage.description=Log aggregation
      - homepage.weight=4

  # Promtail - Log Collection
  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    restart: unless-stopped
    profiles: ["monitoring", "all"]
    networks:
      - t2_proxy
    volumes:
      - ${DOCKERDIR:-/opt/docker}/appdata/promtail:/etc/promtail
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    environment:
      TZ: ${TZ:-UTC}
    healthcheck:
      test: ["CMD", "pgrep", "promtail"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"

  # Uptime Kuma - Uptime Monitoring
  uptime-kuma:
    image: louislam/uptime-kuma:latest
    container_name: uptime-kuma
    restart: unless-stopped
    profiles: ["monitoring", "all"]
    networks:
      - t2_proxy
    ports:
      - "${UPTIME_KUMA_PORT:-3001}:3001"
    volumes:
      - ${DOCKERDIR:-/opt/docker}/appdata/uptime-kuma:/app/data
    environment:
      TZ: ${TZ:-UTC}
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"
    labels:
      - sablier.enable=true
      - sablier.group=mygroup
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.uptime-kuma-rtr.entrypoints=https"
      - "traefik.http.routers.uptime-kuma-rtr.rule=Host(`uptime.${DOMAINNAME_CLOUD_SERVER}`)"
      ## Middlewares
      - "traefik.http.routers.uptime-kuma-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.uptime-kuma-rtr.service=uptime-kuma-svc"
      - "traefik.http.services.uptime-kuma-svc.loadbalancer.server.port=3001"
      ## Homepage
      - homepage.group=Monitoring
      - homepage.name=Uptime Kuma
      - homepage.icon=uptime-kuma.png
      - homepage.href=https://uptime.${DOMAINNAME_CLOUD_SERVER}
      - homepage.description=Uptime monitoring
      - homepage.weight=5

  # Netdata - System Monitoring
  netdata:
    image: netdata/netdata:latest
    container_name: netdata
    restart: unless-stopped
    profiles: ["monitoring", "all"]
    networks:
      - t2_proxy
    ports:
      - "${NETDATA_PORT:-19999}:19999"
    volumes:
      - ${DOCKERDIR:-/opt/docker}/appdata/netdata:/var/lib/netdata
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      TZ: ${TZ:-UTC}
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:19999/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"
    labels:
      - sablier.enable=true
      - sablier.group=mygroup
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.netdata-rtr.entrypoints=https"
      - "traefik.http.routers.netdata-rtr.rule=Host(`netdata.${DOMAINNAME_CLOUD_SERVER}`)"
      ## Middlewares
      - "traefik.http.routers.netdata-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.netdata-rtr.service=netdata-svc"
      - "traefik.http.services.netdata-svc.loadbalancer.server.port=19999"
      ## Homepage
      - homepage.group=Monitoring
      - homepage.name=Netdata
      - homepage.icon=netdata.png
      - homepage.href=https://netdata.${DOMAINNAME_CLOUD_SERVER}
      - homepage.description=System monitoring
      - homepage.weight=6 